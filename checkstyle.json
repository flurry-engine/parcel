{
	"defaultSeverity": "INFO",
	"version": 1,
	"checks": [
        {
            "type": "ConditionalCompilation",
            "props": {
                "policy": "startOfLine",
                "allowSingleline": true,
                "severity": "INFO"
            }
        },
        {
            "type": "EmptyBlock",
            "props": {
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "TYPEDEF_DEF",
                    "INTERFACE_DEF",
                    "OBJECT_DECL",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH"
                ],
                "option": "text",
                "severity": "INFO"
            }
        },
        {
            "type": "NeedBraces",
            "props": {
                "allowSingleLineStatement": true,
                "tokens": [
                    "FOR",
                    "IF",
                    "ELSE_IF",
                    "WHILE",
                    "DO_WHILE"
                ],
                "severity": "INFO"
            }
        },
        {
            "type": "LeftCurly",
            "props": {
                "severity": "WARNING",
                "option": "nl",
                "ignoreEmptySingleline": true,
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "INTERFACE_DEF",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH",
                    "REIFICATION",
                    "ARRAY_COMPREHENSION"
                ]
            }
        },
        {
            "type": "RightCurly",
            "props": {
                "severity": "WARNING",
                "option": "alone",
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "TYPEDEF_DEF",
                    "INTERFACE_DEF",
                    "OBJECT_DECL",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH",
                    "REIFICATION",
                    "ARRAY_COMPREHENSION"
                ]
            }
        },
        {
            "type": "DefaultComesLast",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "HiddenField",
            "props": {
            "ignoreSetter": true,
            "ignoreFormat": "^(main|run)$",
            "ignoreConstructorParameter": true,
            "severity": "ERROR"
            }
        },
        {
            "type": "InnerAssignment",
            "props": {
                "severity": "WARNING",
                "ignoreReturnAssignments": true
            }
        },
        {
            "type": "MultipleVariableDeclarations",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "NestedForDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NestedIfDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NestedTryDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NullableParameter",
            "props": {
                "option": "nullDefault",
                "severity": "ERROR"
            }
        },
        {
            "type": "ReturnCount",
            "props": {
                "ignoreFormat": "^$",
                "max": 2,
                "severity": "WARNING"
            }
        },
        {
            "type": "SimplifyBooleanReturn",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "Trace",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "UnusedLocalVar"
        },
        {
            "type": "VariableInitialisation",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "FieldDocComment",
            "props": {
                "requireParams": true,
                "fieldType": "BOTH",
                "requireReturn": true,
                "ignoreOverride": true,
                "tokens": [
                    "ABSTRACT_DEF",
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "INTERFACE_DEF",
                    "TYPEDEF_DEF"
                ],
                "modifier": "PUBLIC",
                "excludeNames": [
                    "new",
                    "toString"
                ]
            }
        },
        {
            "type": "TODOComment",
            "props": {
                "format": "TODO|FIXME|HACK|XXX|BUG",
                "severity": "IGNORE"
            }
        },
        {
            "type": "TypeDocComment",
            "props": {
                "tokens": [
                    "ABSTRACT_DEF",
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "INTERFACE_DEF",
                    "TYPEDEF_DEF"
                ]
            }
        },
        {
            "type": "EmptyPackage",
            "props": {
                "enforceEmptyPackage": false,
                "severity": "INFO"
            }
        },
        {
            "type": "Interface",
            "props": {
                "allowProperties": false,
                "allowMarkerInterfaces": true,
                "severity": "INFO"
            }
        },
        {
            "type": "UnnecessaryConstructor",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "AvoidStarImport",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "UnusedImport",
            "props": {
                "severity": "WARNING",
                "ignoreModules": [
                    "haxe.macro.Type"
                ],
                "moduleTypeMap": {
                    "haxe.macro.Expr": [
                        "ExprDef",
                        "ComplexType"
                    ]
                }
            }
        },
        {
            "type": "ArrayLiteral",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "ERegLiteral",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "HexadecimalLiteral",
            "props": {
                "severity": "INFO",
                "option": "upperCase"
            }
        },
        {
            "type": "MultipleStringLiterals",
            "props": {
                "minLength": 2,
                "ignore": "^\\s+$",
                "allowDuplicates": 2,
                "severity": "WARNING"
            }
        },
        {
            "type": "StringLiteral",
            "props": {
                "policy": "onlySingle",
                "allowException": true,
                "severity": "INFO"
            }
        },
        {
            "type": "RedundantAccessMeta",
            "props": {
                "prohibitMeta": true,
                "severity": "INFO"
            }
        },
        {
            "type": "RedundantAllowMeta",
            "props": {
                "prohibitMeta": true,
                "severity": "INFO"
            }
        },
        {
            "type": "ModifierOrder",
            "props": {
                "severity": "WARNING",
                "modifiers": [
                    "MACRO",
                    "OVERRIDE",
                    "PUBLIC_PRIVATE",
                    "STATIC",
                    "INLINE",
                    "DYNAMIC"
                ]
            }
        },
        {
            "type": "RedundantModifier",
            "props": {
                "enforcePublicPrivate": false,
                "enforcePublic": false,
                "enforcePrivate": false,
                "severity": "INFO"
            }
        },
        {
            "type": "CatchParameterName",
            "props": {
                "format": "^(e|t|ex|[a-z][a-z][a-zA-Z]+)$",
                "severity": "WARNING"
            }
        },
        {
            "type": "ConstantName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$",
                "tokens": [
                    "INLINE"
                ]
            }
        },
        {
            "type": "ListenerName",
            "props": {
                "severity": "ERROR",
                "format": "^_?on.*",
                "listeners": [
                    "addEventListener",
                    "addListener",
                    "on",
                    "once"
                ]
            }
        },
        {
            "type": "LocalVariableName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z][a-zA-Z0-9]*$"
            }
        },
        {
            "type": "MemberName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z][a-zA-Z0-9]*$",
                "tokens": [
                    "PUBLIC",
                    "PRIVATE",
                    "CLASS"
                ]
            }
        },
        {
            "type": "MethodName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z][a-zA-Z0-9]*$",
                "tokens": [
                    "PUBLIC",
                    "PRIVATE"
                ]
            }
        },
        {
            "type": "ParameterName",
            "props": {
                "severity": "ERROR",
                "format": "^_[a-z][a-zA-Z0-9]*$"
            }
        },
        {
            "type": "TypeName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z]+[a-zA-Z0-9]*$",
                "tokens": [
                    "CLASS",
                    "ENUM",
                    "TYPEDEF"
                ]
            }
        },
        {
            "type": "Anonymous",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "Dynamic",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "Return",
            "props": {
                "severity": "INFO",
                "allowEmptyReturn": true,
                "enforceReturnType": false,
                "enforceReturnTypeForAnonymous": false
            }
        },
        {
            "type": "Type",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "ArrayAccess",
            "props": {
                "spaceBefore": true,
                "spaceInside": true,
                "severity": "INFO"
            }
        },
        {
            "type": "EmptyLines",
            "props": {
                "requireEmptyLineAfterInterface": true,
                "requireEmptyLineAfterAbstract": true,
                "allowEmptyLineAfterSingleLineComment": true,
                "requireEmptyLineAfterClass": true,
                "allowEmptyLineAfterMultiLineComment": true,
                "max": 1,
                "severity": "INFO"
            }
        },
        {
            "type": "EmptyLines",
            "props": {
                "max": 1,
                "severity": "INFO"
            }
        },
        {
            "type": "Indentation",
            "props": {
                "severity": "INFO",
                "character": "    ",
                "ignoreConditionals": false,
                "ignoreComments": true,
                "conditionalPolicy": "aligned",
                "wrapPolicy": "larger"
            }
        },
        {
            "type": "OperatorWhitespace",
            "props": {
                "severity": "WARNING",
                "assignOpPolicy": "around",
                "unaryOpPolicy": "none",
                "ternaryOpPolicy": "around",
                "arithmeticOpPolicy": "around",
                "compareOpPolicy": "around",
                "bitwiseOpPolicy": "around",
                "boolOpPolicy": "around",
                "intervalOpPolicy": "none",
                "arrowPolicy": "none",
                "functionArgPolicy": "none"
            }
        },
        {
            "type": "OperatorWrap",
            "props": {
                "severity": "INFO",
                "option": "eol",
                "tokens": [
                    "=", "+", "-", "*", "/", "%", ">", "<",
                    ">=", "<=", "==", "!=", "&", "|", "^",
                    "&&", "||", "<<", ">>", ">>>", "+=",
                    "-=", "*=", "/=", "%=", "<<=", ">>=",
                    ">>>=", "|=", "&=", "^=", "...", "=>",
                    "!", "++", "--"
                ]
            }
        },
        {
            "type": "SeparatorWhitespace",
            "props": {
                "severity": "WARNING",
                "dotPolicy": "none",
                "commaPolicy": "after",
                "semicolonPolicy": "ignore"
            }
        },
        {
            "type": "SeparatorWrap",
            "props": {
                "severity": "INFO",
                "option": "eol",
                "tokens": [
                    ","
                ]
            }
        },
        {
            "type": "SeparatorWrap",
            "props": {
                "severity": "INFO",
                "option": "nl",
                "tokens": [
                    "."
                ]
            }
        },
        {
            "type": "Spacing",
            "props": {
                "severity": "INFO",
                "spaceIfCondition": "should",
                "spaceForLoop": "should",
                "spaceWhileLoop": "should",
                "spaceSwitchCase": "should",
                "spaceCatch": "should",
                "spaceAroundBinop": true,
                "noSpaceAroundUnop": true,
                "ignoreRangeOperator": true
            }
        },
        {
            "type": "TabForAligning",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "TrailingWhitespace",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "WhitespaceAfter",
            "props": {
                "severity": "WARNING",
                "tokens": [ ",", ";" ]
            }
        },
        {
            "type": "WhitespaceAround",
            "props": {
                "severity": "WARNING",
                "tokens": [ "=", "+" ]
            }
        }
    ]
}